openapi: 3.0.1
info:
  description: >-
    This is the API for Planner App, a A Task Management System with Planner,
    Kanban, and Journal Features (V1. Will be completed 25/07/25).
  version: 1.0.0
  title: Planner App
  contact:
    email: favourudev@gmail.com
servers:
  - url: http://127.0.0.1:5000/api
    description: Testing server
  - url: https://plannerappbackendnc-dad9ghcgd6ame2cc.ukwest-01.azurewebsites.net/api
    description:  Main (production) server

tags:
  - name: user
    description: User Operations about user
  - name: Project
    description: Operations about the Project entity
  - name: Objective
    description: Operations about the Objective entity
  - name: Task
    description: Operations about the Task entity

# login_required_status:
#   '401':
#     description: |
#       Failure: User is not logged in (no b_sc). Please login!<br/>
#       Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
#       Failure: Refresh token is invalid. Please login<br/>
#       Failure: Please login. Refresh token has expired.<br/>
#   '404': |
#     Failure: User is not logged in (no rt). Please login!


paths:
  /sign-up:
    post:
      summary: Sign up to planner App
      description: Sign up to planner app
      tags: [user]
      requestBody:
        description: User Object to be created 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/requestBody/schemas/SignUp'
      security: []
      responses:
        '201':
          description: |
            Ok. <br/>
            Success: Account Created! Login to start planning
        '400':
          description: |
            Bad Request. <br/>
            Failure: Username is missing! <br/>
            Failure: Username is taken. Please choose another one.<br/>
            Failure: Username is too long. Must be <= 15 characters.<br/>
            Failure: Email is not valid. <br/>
            Failure: Email is taken. Please choose another one.<br/>
            Failure: Email is too long. Must be <= 120 characters.<br/>
            Failure: Passwords do not match.
        '404':
          description: |
            Not Found. <br/>
            Failure: Account Sign-up failed. Reason {e}

  /login:
    post:
      summary: login to user account
      description: |
        Login to user account. <br/>
        Note: This route generates the response header 'Set-Cookie' which contains the cookies: **bespoke_session** and **session_AT**
      tags: [user]
      requestBody:
        description: User Login Credentials 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/requestBody/schemas/Login'
      security: []
      responses:
        '200':
          description: 'Ok: Success: Login Successfull. Welcome {user.username}'
          headers:
            Set-Cookie1:
              description: Refresh Token cookie
              schema: 
                type: string
                example: "bespoke_session=[value]; Secure; HttpOnly; SameSite=None"
            Set-Cookie2:
              description: Access Token cookie (JWT)
              schema: 
                type: string
                example: "session_AT=[value]; Secure; HttpOnly; SameSite=None"
        '401':
          description: |
            Unathorised. <br/>
            Failure: User not found; <br/>
            Failure: Incorrect password
        '404':
          description: |
            Not Found. <br/> 
            Failure: Could not update the user's refresh token entry. Reason: {e};<br/>
            Failure: Could not create a refresh token entry for the user. Reason: {e}

  /logout:
    get:
      summary: Logout User
      description: |
        Logs user out of planner app. <br/> Note:This route removes the user RT from the backend db and clears (sets to empty string) the **bespoke_session** and **session_AT** cookies<br/>
        Note: this route is protected thus uses the auth cookie: **bespoke_session** in its request
      tags: [user]
      security:
        - bespoke_session: []
      responses:
        '200':
          description: "Ok. Success: Logout completed"
        '401':
          description: |
            Unathorised.<br/> 
            Failure: Could not logout due to db issues. Reason: {e}.<br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
        '404':
          description: |
            Not Found. <br/>
            Failure: User is not logged in (no rt). Please login!<br/>
            Could not logout due to db issues. Reason: {e}

  /refresh:
    get:
      summary: "Refresh Access Token"
      description: |
        Refresh Access Token. <br/> Note:This route uses the cookie **bespoke_session** to authenticate the user<br/>
        Note: this route is protected thus uses the auth cookie: **bespoke_session** in its request
      tags: [user]
      security:
        - bespoke_session: []
      responses:
        '200':
          description: Ok. Successfully refreshed access_token
          headers:
            Set-Cookie:
              description: Access Token cookie
              schema: 
                type: string
                example: "session_AT=[value]; Secure; HttpOnly; SameSite=None"
        '401':
          description: |
            Bad Request. <br/>Unathorised Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
        '404':
          description: |
            Not Found. <br/>
            Failure: User is not logged in (no rt). Please login!


  /create-project:
    post:
      summary: "Creates a project object"
      description: |
        Creates a project object. This also automatically creates an objective called 'No Objective' under the created project. This objective stores all project tasks that do not belong to a specific project objective<br/>
        Note: this route is protected thus uses the auth cookies: **bespoke_session** and **session_AT** in its request
      tags: [Project]
      requestBody:
        description: Project's properties 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/requestBody/schemas/create-project'
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '201':
          description: |
            Ok. <br/> 
            Success: Project Added!
        '400':
          description: |
            Bad Request.<br/>
            Failure: Project is missing a description. Please add one.<br/>
            Failure: Project is missing a title. Please add one.<br/>
            Failure: The title has over {project_title_limit} chars<br/>
            Failure: The project title provided already exists for this user. Please provide a different title.
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
            Request is missing access token. Please login to refresh access token<br/>
            Deserialisation or Signiture verificaiton of access token cookie has failed! Reason: {e}<br/>
            Invalid Access Token! Reason: {e}<br/>
        '404':
          description: |
            Not Found. <br/>
            Failure: User is not logged in (no rt). Please login!<br/>
            Failure: Could not add the project to the db! Reason: {e}


  /read-projects:
    get:
      summary: "gets all the user's projects"
      description: | 
        gets all the user's projects<br/>
        Note: this route is protected thus uses the auth cookies: **bespoke_session** and **session_AT** in its request
      tags: [Project]
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '200':
          description: |
            Ok.<br/>
            Success: user's projects loaded
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
            Request is missing access token. Please login to refresh access token<br/>
            Deserialisation or Signiture verificaiton of access token cookie has failed! Reason: {e}<br/>
            Invalid Access Token! Reason: {e}<br/>
        '404':
          description: |
            Not Found.<br/>
            Failure: User is not logged in (no rt). Please login!<br/>
            Failure: Could not read user's projects! Reason: {e}

  /query-projects:
    get:
      summary: "Queries a project"
      description: |
        Used in the Planner Entity Page to paginate the user's projects.<br/>
        Also can filter projects by status.<br/>
        Note: this route is protected thus uses the auth cookies: **bespoke_session** and **session_AT** in its request
      tags: [Project]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: "(Optional, default: None). The project page being returned. If not inputted then projects are not paginated thus all projects matching the query are returned"
        - in:  query
          name: perPage
          schema:
            type: integer
          description: "(Optional, default: None). The max number of number of projects returned per page. If not inputted then projects are not paginated thus all projects matching the query are returned"
        - in:  query
          name: status
          schema:
            type: string
          description: "(Optional, default: None) The status of the projects being returned."
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '200':
          description: |
            Ok.<br/>
            Success: user's projects loaded
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
            Request is missing access token. Please login to refresh access token<br/>
            Deserialisation or Signiture verificaiton of access token cookie has failed! Reason: {e}<br/>
            Invalid Access Token! Reason: {e}<br/>
        '404':
          description: |
            Not Found.<br/>
            Failure: User is not logged in (no rt). Please login!<br/>
            Failure: Could not query user's project! Reason: {e}

  /get-project-progress/{projectId}:
    get:
      summary: "Gets the progress of a project. "
      description: | 
        Gets the progress of a project using 2 metrics: total task duration and total task count<br/>
        Note: this route is protected thus uses the auth cookies: **bespoke_session** and **session_AT** in its request

      tags: [Project]
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project who progress is to be retrieved
          schema:
            type: integer
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '200':
          description: |
            Ok.<br/>
            Success: Projects's progress retrieved.
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
            Request is missing access token. Please login to refresh access token<br/>
            Deserialisation or Signiture verificaiton of access token cookie has failed! Reason: {e}<br/>
            Invalid Access Token! Reason: {e}<br/>
        '403':
          description: |
            Forbidden.<br/>
            Failure: The requested project does not belong to the user. Choose another one.

        '404':
          description: |
            Not Found.<br/>
            Failure: User is not logged in (no rt). Please login!<br/>
            Failure: The requested project is not in the database. Choose another one.

  /update-project/{projectId}:
    patch:
      summary: "Updates a project."
      description: |
        Updates a project.<br/>
        Note: this route is protected thus uses the auth cookies: **bespoke_session** and **session_AT** in its request

      tags: [Project]
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project which is being edited. 
          schema:
            type: integer
      requestBody:
        description: Project's properties 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/requestBody/schemas/update-project'
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '200':
          description: |
            Ok.<br/>
            Success: Project has been updated.
        '400':
          description: |
            Bad Request.<br/>
            Failure: Project is missing a title. Please add one.<br/>
            Failure: The title has over {project_title_limit} chars<br/>
            Failure: The project title provided already exists for this user. Please provide a different title.<br/>
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
            Request is missing access token. Please login to refresh access token<br/>
            Deserialisation or Signiture verificaiton of access token cookie has failed! Reason: {e}<br/>
            Invalid Access Token! Reason: {e}<br/>
        '403':
          description: |
            Forbidden.<br/>
            Failure: User is attempting to edit the default project which is not allowed.<br/>
            Failure: User is attempting to update a default project which is not allowed.
        '404':
          description: |
            Not Found.<br/>
            Failure: User is not logged in (no rt). Please login!<br/>
            Failure: Could not find the selected project in the db. Please choose another project id.<br/>
            Failure: Could not update the project! Reason: {e}

  /delete-project/{projectId}:
    delete:
      summary: "Deletes a project."
      description: |
        Deletes a project and its children (objectives and tasks)<br/>
        Note: this route is protected thus uses the auth cookies: **bespoke_session** and **session_AT** in its request
      tags: [Project]
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project which is being deleted. 
          schema:
            type: integer
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '200':
          description: |
            Ok.<br/>
            Success: The project was successfully deleted!
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
            Request is missing access token. Please login to refresh access token<br/>
            Deserialisation or Signiture verificaiton of access token cookie has failed! Reason: {e}<br/>
            Invalid Access Token! Reason: {e}<br/>
        '403':
          description: |
            Forbidden. <br/>
            Failure: The project you are trying to delete does not belong to the user <br/>
            Failure: User is attempting to delete the default project which is not allowed.

        '404':
          description: |
            Not Found.<br/>
            Failure: User is not logged in (no rt). Please login!<br/>
            Failure: The project you are trying to delete does not exist<br/>
            Failure: Could not delete the project! Reason: {e}


  /example-just-rt:
    get:
      summary: ""
      description: ""
      tags: [user]
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '200':
          description: |
            Ok.<br/>
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
        '404':
          description: |
            Not Found.<br/>
            Failure: User is not logged in (no rt). Please login!

  /example-both-rt-and-at-checks:
    get:
      summary: ""
      description: ""
      tags: [user]
      security:
        - session_AT: []
        - bespoke_session: []
      responses:
        '200':
          description: |
            Ok.<br/>
        '401':
          description: |
            Unathorised. <br/>
            Failure: User is not logged in (no b_sc). Please login!<br/>
            Failure: Could not decrypt the **bespoke_session** cookies. Reason: {e}<br/>
            Failure: Refresh token is invalid. Please login<br/>
            Failure: Please login. Refresh token has expired.<br/>
            Request is missing access token. Please login to refresh access token<br/>
            Deserialisation or Signiture verificaiton of access token cookie has failed! Reason: {e}<br/>
            Invalid Access Token! Reason: {e}<br/>
        '404':
          description: |
            Not Found.<br/>
            Failure: User is not logged in (no rt). Please login!

components:
  securityDefinitions:
    bespoke_session:
      type: apiKey
      name: bespoke_session
      in: cookie
    session_AT:
      type: apiKey
      name: session_AT
      in: cookie

requestBody:
  schemas:
    SignUp:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password1:
          type: string
        password2:
          type: string
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    create-project:
      type: object
      properties:
        projectNumber:
          type: integer
          example: Null
          description: (Optional, auto-filled) The project's identifier. Not to be mistaken with projectId (a unique project identifier) as it is only unique within a user (i.e. other users can have project's with the same projectNumber as the current user).
        status:
          type: string
          example: To-Do
          description: "(Optional, default: To-Do, hardly used) The project's status: To-Do, In-Progress and Completed. Hardly used."
        title:
          type: string
          description: (required) The project's title
        description:
          type: string
          example: "blah"
          description: (required) The project's description
        deadline:
          type: string
          example: Null
          description: (optional, hardly used) The project's deadline date ('%Y-%m-%d' e.g., "2025-02-01")
        scheduledStart:
          type: string
          example: Null
          description: (optional, hardly used) The project's start date ('%Y-%m-%d' e.g., "2025-02-01")
        scheduledFinish:
          type: string
          example: Null
          description: (optional, hardly used) The project's end date ('%Y-%m-%d', e.g., "2025-02-01")
        tag:
          type: string
          example: test|api-example|
          description: (optional) The project's tags <tag1>|<tag2>|...<tagN>|.

    update-project:
      type: object
      properties:
        status:
          type: string
          example: To-Do
          description: "(Optional, default: To-Do, hardly used) The project's status: To-Do, In-Progress and Completed. Hardly used."
        title:
          type: string
          description: (required) The project's title
        description:
          type: string
          example: "blah"
          description: (required) The project's description
        deadline:
          type: string
          example: "2025-02-20"
          description: (optional, hardly used) The project's deadline date ('%Y-%m-%d' e.g., "2025-02-01")
        scheduledStart:
          type: string
          example: "2025-02-01"
          description: (optional, hardly used) The project's start date ('%Y-%m-%d', e.g., "2025-02-01")
        scheduledFinish:
          type: string
          example: "2025-02-15"
          description: (optional, hardly used) The project's end date ('%Y-%m-%d', e.g., "2025-02-01")
        tag:
          type: string
          example: test|api-example|
          description: (optional) The project's tags in the format {tag1}|{tag2}|...{tagN}|.
